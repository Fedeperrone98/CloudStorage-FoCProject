#include <openssl/rand.h>
#include <openssl/x509.h>
#include <openssl/x509_vfy.h>
#include <openssl/evp.h>
#include <openssl/pem.h>
#include <string.h>
#include <stdlib.h>
#include <stdbool.h>
#include <stdio.h>

using namespace std;

//function that return Diffie-Hellman low level parameters
static DH *get_dh2048(void)
{
    static unsigned char dhp_2048[] = {
        0x86, 0x97, 0x93, 0xE0, 0x6A, 0xC5, 0x66, 0x94, 0xF9, 0x41,
        0x2E, 0x0C, 0xD9, 0xA6, 0x1A, 0xC6, 0xE5, 0x5A, 0xCA, 0xB7,
        0xA8, 0xDF, 0x01, 0x2F, 0xE3, 0x2D, 0xF2, 0xC3, 0x13, 0x0A,
        0x8C, 0x36, 0x87, 0x1B, 0x08, 0x2A, 0x68, 0xB8, 0xCD, 0x31,
        0xFB, 0x28, 0x0B, 0xD1, 0x86, 0x98, 0x62, 0xE1, 0x73, 0xFA,
        0xEF, 0x45, 0x42, 0x36, 0xCC, 0x92, 0x79, 0x7C, 0xD6, 0x6D,
        0x91, 0x0F, 0x60, 0x82, 0x93, 0xB5, 0x97, 0x13, 0xD5, 0x5E,
        0x7A, 0x82, 0xE5, 0x28, 0xB8, 0xB9, 0x97, 0x58, 0x81, 0x66,
        0x47, 0x2C, 0x4A, 0x27, 0x8B, 0xD7, 0xAC, 0x4B, 0xF3, 0xF7,
        0x99, 0x7D, 0xDD, 0x92, 0x21, 0x70, 0xBD, 0xF7, 0x30, 0xEE,
        0xD6, 0xFC, 0x29, 0x32, 0xC5, 0xB4, 0x05, 0x78, 0x51, 0x3F,
        0xCF, 0x41, 0xE9, 0x73, 0x4B, 0x3B, 0x99, 0x15, 0x68, 0xF9,
        0x8A, 0xB6, 0x6D, 0x83, 0x08, 0xFF, 0xF1, 0x8A, 0x96, 0xC1,
        0x13, 0x86, 0xB1, 0x04, 0x6B, 0x9A, 0x52, 0x3D, 0xEF, 0x0A,
        0x27, 0x5F, 0x92, 0xB1, 0x6B, 0x51, 0x65, 0xB9, 0x13, 0x8F,
        0x24, 0x18, 0x9A, 0x32, 0x5F, 0x47, 0xA8, 0xF4, 0x11, 0xEB,
        0xA2, 0x8B, 0x61, 0x3A, 0xD9, 0x80, 0xF5, 0x2E, 0x63, 0x21,
        0x44, 0xA3, 0x18, 0x19, 0x43, 0x01, 0x5B, 0x0C, 0x94, 0x2E,
        0x77, 0xD7, 0x93, 0x5D, 0x5C, 0x77, 0xBA, 0x0F, 0x5A, 0xBD,
        0x4E, 0x10, 0x32, 0xE0, 0xFA, 0xC1, 0xB9, 0x0A, 0xB1, 0x43,
        0xD2, 0xBD, 0x76, 0xBC, 0x4D, 0xF8, 0xCC, 0xD3, 0xEE, 0xCC,
        0x3A, 0xB2, 0x08, 0x9B, 0x24, 0x5B, 0x05, 0x8A, 0xA5, 0x0A,
        0x9E, 0x0E, 0xE5, 0xB2, 0x9C, 0x01, 0x38, 0xD3, 0xE1, 0xD7,
        0x0C, 0xAA, 0x09, 0xDA, 0xE3, 0x56, 0x1A, 0x26, 0xBC, 0x0B,
        0x71, 0xBD, 0xA7, 0xD5, 0x5E, 0xF8, 0xB1, 0x61, 0x8A, 0xC0,
        0x51, 0xFA, 0xDD, 0xE8, 0x55, 0x73
    };
    static unsigned char dhg_2048[] = {
        0x02
    };
    DH *dh = DH_new();
    BIGNUM *p, *g;

    if (dh == NULL)
        return NULL;
    p = BN_bin2bn(dhp_2048, sizeof(dhp_2048), NULL);
    g = BN_bin2bn(dhg_2048, sizeof(dhg_2048), NULL);
    if (p == NULL || g == NULL
            || !DH_set0_pqg(dh, p, NULL, g)) {
        DH_free(dh);
        BN_free(p);
        BN_free(g);
        return NULL;
    }
    return dh;
}